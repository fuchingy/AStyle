#    Configuration file for Artistic Style Automatic Formatter

################################################################################

--style=1tbs
--indent=spaces=4

# int Foo(bool isBar)
# {
#     if (isFoo) {
#         bar();
#         return 1;
#     } else {
#         return 0;
#     }
# }

################################################################################
--indent-switches

# switch (foo)
# {
#     case 1:
#         a += 1;
#         break;
#
#     case 2:
#     {
#         a += 2;
#         break;
#     }
# }

################################################################################

--indent-preproc-define

# #define Is_Bar(arg,a,b) \
#     (Is_Foo((arg), (a)) \
#     || Is_Foo((arg), (b)))

################################################################################

################################################################################

--indent-col1-comments

# void Foo()
# {
#      // comment
#      if (isFoo)
#      {
#          bar();
#      }
#
# }


################################################################################

--min-conditional-indent=0

# if (a < b
#     || c > d)
# {
#     foo++;
# }

################################################################################

--pad-oper

# if (foo == 2)
# {
#     a = bar((b - c) * a, d--);
# }

################################################################################

--pad-comma

# if (isFoo(a, b))
#     bar(a, b);

################################################################################

--pad-header

# if (isFoo((a+2), b)) /*for, while, ...*/
# {
#     bar(a, b);
# }

################################################################################

--unpad-paren

# if (isFoo((a+2), b)) /* <- if ( isFoo ( ( a+2 ) , b ) ) */
# {
#     bar(a, b);
# }

################################################################################

--delete-empty-lines

################################################################################

--align-pointer=type
--align-reference=type

# char* foo1;
# char& foo2;

################################################################################

--remove-braces

# if (isFoo)
#     isFoo = false;

################################################################################

--convert-tabs

################################################################################

--attach-return-type
--attach-return-type-decl

# void Foo(bool isFoo);

################################################################################

--convert-tabs

################################################################################

--close-templates

# Stack< int, List< int >> stack1;

################################################################################

--max-code-length=80

################################################################################

--break-after-logical

# if (thisVariable1 == thatVariable1 ||
#     thisVariable2 == thatVariable2 ||
#     thisVariable3 == thatVariable3)
# {
#     bar();
# }

################################################################################

--mode=c

################################################################################

--lineend=linux

################################################################################

--suffix=.fmt.bak

################################################################################

--preserve-date

################################################################################

--formatted

